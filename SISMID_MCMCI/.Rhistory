r <- append(r, t + T + k)
lambda <- lambda + 1;
labels <- append(labels, lambda)
type <- append(type, 1);
times <- append(times, t + T);
t <- t + T
}
else {
#removal occurs
I <- I-1
type <- append(type, 2);
index.min.r <- which(min(r, na.rm=TRUE)==r)
r[index.min.r] <- NA
labels <- append(labels, index.min.r)
times <- append(times, R);
t <- R
}
}
# record the final size , i.e. the number of initially susceptlbles who contracted the disease sometime during the epidemic.
final.size=sum(type[type==1])
duration=max(times)
# record the times of events (infections/removals) as well as the type
res <- list("t"=times, "type"=type, "labels"=labels, "size"=final.size, "duration"=duration);
res
}
set.seed(05081991)
sir_f.size <- NULL
for(beta in c(0.9, 2, 4, 8)){
for(i in 1:1000){
sir1 <- simSIR.Non.Markov.weibull(21, beta, 1, 0.5)
sir_f.size <- c(sir_f.size, sir1$size)
}
hist(sir_f.size, col=5, main=paste0('beta = ', beta, " gamma ~ WEIBULL(1,0.5)"))
}
set.seed(05081991)
sir_f.size1 <- NULL
sir_f.size2 <- NULL
sir_f.size3 <- NULL
sir_f.size4 <- NULL
beta = 2
for(i in 1:1000){
sir1 <- simSIR.Markov.fsize(21, beta, 1)
sir2 <- simSIR.Non.Markov.weibull(21, beta, 1, 0.5)
sir3 <- simSIR.Non.Markov.constant(21, beta, 1)
sir4 <- simSIR.Non.Markov.gamma(21, beta, 1, 0.5)
sir_f.size1 <- c(sir_f.size1, sir1$size)
sir_f.size2 <- c(sir_f.size2, sir2$size)
sir_f.size3 <- c(sir_f.size3, sir3$size)
sir_f.size4 <- c(sir_f.size4, sir4$size)
}
hist(sir_f.size1, main=paste0(" gamma ~ Exp(1)"), xlab="Size of epidemic")
hist(sir_f.size2, col=2, main=paste0(" gamma ~ Weibull(1,0.5)"), xlab="Size of epidemic")
hist(sir_f.size3, col=3, main=paste0(" gamma = 1"), xlab="Size of epidemic")
hist(sir_f.size4, col=4, main=paste0(" gamma ~ (1,0.5)"), xlab="Size of epidemic")
E <- 0
I <- 1
S <- N-1;
t <- 0;
times <- c(t);
k <- rweibull(1, gamma, delta)
r <- k
delta=.5
k <- rweibull(1, gamma, delta)
k
r <- k
type <- c(1);
lambda <- 1;
labels <- c(1);
hist(rgamma(10000, 1, 0.5))
hist(rweibull(10000, 1, 0.5))
hist(rweibull(10000, 1, 2))
hist(rgamma(10000, 1, 2))
simSIR.Non.Markov.weibull <- function(N, beta, gamma, delta) {
# initial number of infectives and susceptibles;
I <- 1
S <- N-1;
# recording time;
t <- 0;
times <- c(t);
# create a vector containing the removal times of all the current infectives.
k <- rweibull(1, gamma, delta)
r <- k
# a vector which records the type of event (1=infection, 2=removal)
type <- c(1);
# a counter for labelling the individuals
lambda <- 1;
# a vector to store the labels
labels <- c(1);
while (I > 0) {
############################################
# simulate times to the next possible events
############################################
# time to next infection
if (S > 0) {
T  <- rexp(1, (beta/N)*I*S)
}
else {
T <- Inf;
}
# time to next removal
R <- min(r, na.rm=TRUE);
# check which of the two events happens first
if (t + T < R) {
# infection occurs
I <- I+1;
S <- S-1;
k <- rweibull(1, gamma, delta)
r <- append(r, t + T + k)
lambda <- lambda + 1;
labels <- append(labels, lambda)
type <- append(type, 1);
times <- append(times, t + T);
t <- t + T
}
else {
#removal occurs
I <- I-1
type <- append(type, 2);
index.min.r <- which(min(r, na.rm=TRUE)==r)
r[index.min.r] <- NA
labels <- append(labels, index.min.r)
times <- append(times, R);
t <- R
}
}
# record the final size , i.e. the number of initially susceptlbles who contracted the disease sometime during the epidemic.
final.size=sum(type[type==1])
duration=max(times)
# record the times of events (infections/removals) as well as the type
res <- list("t"=times, "type"=type, "labels"=labels, "size"=final.size, "duration"=duration);
res
}
set.seed(05081991)
sir_f.size <- NULL
for(beta in c(0.9, 2, 4, 8)){
for(i in 1:1000){
sir1 <- simSIR.Non.Markov.weibull(21, beta, 1, 0.5)
sir_f.size <- c(sir_f.size, sir1$size)
}
hist(sir_f.size, col=5, main=paste0('beta = ', beta, " gamma ~ WEIBULL(1,0.5)"))
}
set.seed(05081991)
sir_f.size1 <- NULL
sir_f.size2 <- NULL
sir_f.size3 <- NULL
sir_f.size4 <- NULL
beta = 2
for(i in 1:1000){
sir1 <- simSIR.Markov.fsize(21, beta, 1)
sir2 <- simSIR.Non.Markov.weibull(21, beta, 1, 0.5)
sir3 <- simSIR.Non.Markov.constant(21, beta, 1)
sir4 <- simSIR.Non.Markov.gamma(21, beta, 1, 0.5)
sir_f.size1 <- c(sir_f.size1, sir1$size)
sir_f.size2 <- c(sir_f.size2, sir2$size)
sir_f.size3 <- c(sir_f.size3, sir3$size)
sir_f.size4 <- c(sir_f.size4, sir4$size)
}
hist(sir_f.size1, main=paste0(" gamma ~ Exp(1)"), xlab="Size of epidemic")
hist(sir_f.size2, col=2, main=paste0(" gamma ~ Weibull(1,0.5)"), xlab="Size of epidemic")
hist(sir_f.size3, col=3, main=paste0(" gamma = 1"), xlab="Size of epidemic")
hist(sir_f.size4, col=4, main=paste0(" gamma ~ (1,0.5)"), xlab="Size of epidemic")
simSEIR.Non.Markov.weibull <- function(N, beta, alpha, gamma, delta) {
# initial number of infectives and susceptibles;
E <- 0
I <- 1
S <- N-1;
# recording time;
t <- 0;
times <- c(t);
# create a vector containing the removal times of all the current infectives.
k <- rweibull(1, gamma, delta)
r <- k
# a vector which records the type of event (1=infection, 2=removal)
type <- c(1);
# a counter for labelling the individuals
lambda <- 1;
# a vector to store the labels
labels <- c(1);
while (I > 0) {
############################################
# simulate times to the next possible events
############################################
# time to next infection
if (S > 0) {
T  <- rexp(1, (beta/N)*I*S)
}
else {
T <- Inf;
}
# time to next removal
R <- min(r, na.rm=TRUE);
# check which of the two events happens first
if (t + T + alpha < R) {
# infection occurs
I <- I+1;
S <- S-1;
k <- rweibull(1, gamma, delta)
r <- append(r, t + T + alpha + k)
lambda <- lambda + 1;
labels <- append(labels, lambda)
type <- append(type, 1);
times <- append(times, t + T + alpha);
t <- t + T + alpha
}
else {
#removal occurs
I <- I-1
type <- append(type, 2);
index.min.r <- which(min(r, na.rm=TRUE)==r)
r[index.min.r] <- NA
labels <- append(labels, index.min.r)
times <- append(times, R);
t <- R
}
}
# record the final size , i.e. the number of initially susceptlbles who contracted the disease sometime during the epidemic.
final.size=sum(type[type==1])
duration=max(times)
# record the times of events (infections/removals) as well as the type
res <- list("t"=times, "type"=type, "labels"=labels, "size"=final.size, "duration"=duration);
res
}
set.seed(05081991)
sir_f.size <- NULL
for(beta in c(0.9, 2, 4, 8)){
for(i in 1:1000){
sir1 <- simSEIR.Non.Markov.weibull(21, beta, 1, 0.5)
sir_f.size <- c(sir_f.size, sir1$size)
}
hist(sir_f.size, col=5, main=paste0('beta = ', beta, " gamma ~ WEIBULL(1,0.5)"))
}
set.seed(05081991)
sir_f.size <- NULL
for(beta in c(0.9, 2, 4, 8)){
for(i in 1:1000){
sir1 <- simSEIR.Non.Markov.weibull(21, beta, alpha=1, gamma=1, delta=0.5)
sir_f.size <- c(sir_f.size, sir1$size)
}
hist(sir_f.size, col=5, main=paste0('beta = ', beta, " gamma ~ WEIBULL(1,0.5)"))
}
set.seed(05081991)
sir_f.size <- NULL
sir_dur <- NULL
simSEIR.Non.Markov.weibull <- function(N, beta, alpha, gamma, delta) {
# initial number of infectives and susceptibles;
E <- 0
I <- 1
S <- N-1;
# recording time;
t <- 0;
times <- c(t);
# create a vector containing the removal times of all the current infectives.
k <- rweibull(1, gamma, delta)
r <- k
# a vector which records the type of event (1=infection, 2=removal)
type <- c(1);
# a counter for labelling the individuals
lambda <- 1;
# a vector to store the labels
labels <- c(1);
while (I > 0) {
############################################
# simulate times to the next possible events
############################################
# time to next infection
if (S > 0) {
T  <- rexp(1, (beta/N)*I*S)
}
else {
T <- Inf;
}
# time to next removal
R <- min(r, na.rm=TRUE);
# check which of the two events happens first
if (t + T + alpha < R) {
# infection occurs
I <- I+1;
S <- S-1;
k <- rweibull(1, gamma, delta)
r <- append(r, t + T + alpha + k)
lambda <- lambda + 1;
labels <- append(labels, lambda)
type <- append(type, 1);
times <- append(times, t + T + alpha);
t <- t + T + alpha
}
else {
#removal occurs
I <- I-1
type <- append(type, 2);
index.min.r <- which(min(r, na.rm=TRUE)==r)
r[index.min.r] <- NA
labels <- append(labels, index.min.r)
times <- append(times, R);
t <- R
}
}
# record the final size , i.e. the number of initially susceptlbles who contracted the disease sometime during the epidemic.
final.size=sum(type[type==1])
duration=max(times)
# record the times of events (infections/removals) as well as the type
res <- list("t"=times, "type"=type, "labels"=labels, "size"=final.size, "duration"=duration);
res
}
set.seed(05081991)
sir_f.size <- NULL
sir_dur <- NULL
for(beta in c(0.9, 4)){
for(i in 1:1000){
sir1 <- simSEIR.Non.Markov.weibull(21, beta, alpha=1, gamma=1, delta=0.5)
sir_f.size <- c(sir_f.size, sir1$size)
sir_dur <- c(sir_dur, sir1$duration)
}
hist(sir_f.size, col=5, main=paste0('beta = ', beta, " gamma ~ WEIBULL(1,0.5)"), xlab='Final size')
hist(sir_dur, col=5, main=paste0('beta = ', beta, "alpha = ", alpha,  " gamma ~ WEIBULL(1,0.5)"), xlab='Duration')
}
set.seed(05081991)
sir_f.size <- NULL
sir_dur <- NULL
for(beta in c(0.9, 4)){
for(i in 1:1000){
sir1 <- simSEIR.Non.Markov.weibull(21, beta, alpha=1, gamma=1, delta=0.5)
sir_f.size <- c(sir_f.size, sir1$size)
sir_dur <- c(sir_dur, sir1$duration)
}
hist(sir_f.size, col=5, main=paste0('beta = ', beta, " gamma ~ WEIBULL(1,0.5)"), xlab='Final size')
hist(sir_dur, col=5, main=paste0('beta = ', beta, "alpha = 1",  " gamma ~ WEIBULL(1,0.5)"), xlab='Duration')
}
set.seed(05081991)
sir_f.size <- NULL
sir_dur <- NULL
for(beta in c(0.9, 4)){
for(i in 1:1000){
sir1 <- simSEIR.Non.Markov.weibull(21, beta, alpha=1, gamma=1, delta=0.5)
sir_f.size <- c(sir_f.size, sir1$size)
sir_dur <- c(sir_dur, sir1$duration)
}
hist(sir_f.size, col=5, main=paste0('beta = ', beta, " gamma ~ WEIBULL(1,0.5)"), xlab='Final size')
hist(sir_dur, col=5, main=paste0('beta = ', beta, "alpha = 1",  " gamma ~ WEIBULL(1,0.5)"), xlab='Duration')
}
hist(sir_f.size, col=5, main=paste0('beta = ', beta, " gamma ~ WEIBULL(1,0.5)"), xlab='Final size')
par(mfrow=c(2,2))
set.seed(05081991)
sir_f.size <- NULL
sir_dur <- NULL
for(beta in c(0.9, 4)){
for(i in 1:1000){
sir1 <- simSEIR.Non.Markov.weibull(21, beta, alpha=1, gamma=1, delta=0.5)
sir_f.size <- c(sir_f.size, sir1$size)
sir_dur <- c(sir_dur, sir1$duration)
}
hist(sir_f.size, col=5, main=paste0('beta = ', beta, " gamma ~ WEIBULL(1,0.5)"), xlab='Final size')
hist(sir_dur, col=5, main=paste0('beta = ', beta, "alpha = 1",  " gamma ~ WEIBULL(1,0.5)"), xlab='Duration')
}
simSEIR.Non.Markov.weibull <- function(N, beta, alpha, gamma, delta) {
# initial number of infectives and susceptibles;
E <- 0
I <- 1
S <- N-1;
# recording time;
t <- 0;
times <- c(t);
# create a vector containing the removal times of all the current infectives.
k <- rweibull(1, gamma, delta)
r <- k
# a vector which records the type of event (1=infection, 2=removal)
type <- c(1);
# a counter for labelling the individuals
lambda <- 1;
# a vector to store the labels
labels <- c(1);
while (I > 0) {
############################################
# simulate times to the next possible events
############################################
# time to next infection
if (S > 0) {
T  <- rexp(1, (beta/N)*I*S)
}
else {
T <- Inf;
}
# time to next removal
R <- min(r, na.rm=TRUE);
# check which of the two events happens first
if (t + T + alpha < R) {
# infection occurs
I <- I+1;
S <- S-1;
k <- rweibull(1, gamma, delta)
r <- append(r, t + T + alpha + k)
lambda <- lambda + 1;
labels <- append(labels, lambda)
type <- append(type, 1);
times <- append(times, t + T + alpha);
t <- t + T + alpha
}
else {
#removal occurs
I <- I-1
type <- append(type, 2);
index.min.r <- which(min(r, na.rm=TRUE)==r)
r[index.min.r] <- NA
labels <- append(labels, index.min.r)
times <- append(times, R);
t <- R
}
}
# record the final size , i.e. the number of initially susceptlbles who contracted the disease sometime during the epidemic.
final.size=sum(type[type==1])
duration=max(times)
# record the times of events (infections/removals) as well as the type
res <- list("t"=times, "type"=type, "labels"=labels, "size"=final.size, "duration"=duration);
res
}
par(mfrow=c(2,2))
set.seed(05081991)
sir_f.size <- NULL
sir_dur <- NULL
for(beta in c(0.9, 4)){
for(i in 1:1000){
sir1 <- simSEIR.Non.Markov.weibull(21, beta, alpha=1, gamma=1, delta=0.5)
sir_f.size <- c(sir_f.size, sir1$size)
sir_dur <- c(sir_dur, sir1$duration)
}
hist(sir_f.size, col=5, main=paste0('beta = ', beta), xlab='Final size')
hist(sir_dur, col=5, main=paste0('beta = ', beta), xlab='Duration')
}
simSEIR.Non.Markov.weibull <- function(N, beta, alpha, gamma, delta) {
# initial number of infectives and susceptibles;
E <- 0
I <- 1
S <- N-1;
# recording time;
t <- 0;
times <- c(t);
# create a vector containing the removal times of all the current infectives.
k <- rweibull(1, gamma, delta)
r <- k
# a vector which records the type of event (1=infection, 2=removal)
type <- c(1);
# a counter for labelling the individuals
lambda <- 1;
# a vector to store the labels
labels <- c(1);
while (I > 0) {
############################################
# simulate times to the next possible events
############################################
# time to next infection
if (S > 0) {
T  <- rexp(1, (beta/N)*I*S)
}
else {
T <- Inf;
}
# time to next removal
R <- min(r, na.rm=TRUE);
# check which of the two events happens first
if (t + T + alpha < R) {
# infection occurs
I <- I+1;
S <- S-1;
k <- rweibull(1, gamma, delta)
r <- append(r, t + T + alpha + k)
lambda <- lambda + 1;
labels <- append(labels, lambda)
type <- append(type, 1);
times <- append(times, t + T + alpha);
t <- t + T + alpha
}
else {
#removal occurs
I <- I-1
type <- append(type, 2);
index.min.r <- which(min(r, na.rm=TRUE)==r)
r[index.min.r] <- NA
labels <- append(labels, index.min.r)
times <- append(times, R);
t <- R
}
}
# record the final size , i.e. the number of initially susceptlbles who contracted the disease sometime during the epidemic.
final.size=sum(type[type==1])
duration=max(times)
# record the times of events (infections/removals) as well as the type
res <- list("t"=times, "type"=type, "labels"=labels, "size"=final.size, "duration"=duration);
res
}
par(mfrow=c(2,2))
set.seed(05081991)
sir_f.size <- NULL
sir_dur <- NULL
for(beta in c(0.9, 4)){
for(i in 1:1000){
sir1 <- simSEIR.Non.Markov.weibull(21, beta, alpha=1, gamma=1, delta=0.5)
sir_f.size <- c(sir_f.size, sir1$size)
sir_dur <- c(sir_dur, sir1$duration)
}
hist(sir_f.size, col=5, main=paste0('FINAL SIZE: beta = ', beta), xlab='Final size')
hist(sir_dur, col=5, main=paste0('DURATION: beta = ', beta), xlab='Duration')
}
E <- 0
I <- 1
S <- N-1;
t <- 0;
times <- c(t);
k <- rweibull(1, gamma, delta)
r <- k
type <- c(1);
lambda <- 1;
labels <- c(1);
